manifest:
  package: rew.pimmy
  version: 0.0.14
  readme: README.md
  description: Package manager for rew
  tags:
    - rew
    - package-manager
entries:
  main: pimmy.qrew
  pimmy: pimmy.qrew
native_test:
  # When to install native libraries
  on: build

  # Linux: Use preset package managers/bases
  # BONUS: Add custom command
  linux:
    - name: nodejs
      type: package
      version: ">=20.0.0"
      check: node --version
      managers:
        apt: nodejs
        dnf: nodejs
        pacman: nodejs
        zypper: nodejs20  # (openSUSE example)
        nix: node

      fallback:
        type: script
        path: _native_install.coffee

      preinstall:
        - shell: echo Preparing to install Node.js...
      postinstall:
        - shell: node --version



    - name: openssl
      type: package
      version: ">=1.1"
      check: jsjshd
      managers:
        apt: libssl-dev
        dnf: openssl-devel
        pacman: openssl
      fallback:
        - type: shell
          content: |
            echo

  # MACOS: Under planning
  macos:
    - name: nodejs
      type: package
      manager: brew
      package: nodejs

  # Windows: Use installers or managers like choco or winget
  windows:
    - name: nodejs
      type: package
      managers:
        winget: OpenJS.NodeJS.LTS
        chocolatey: nodejs-lts
      fallback:
        type: installer
        url: https://nodejs.org/dist/latest/node-v20.x.x-x64.msi

    - name: vcredist
      type: installer
      url: https://aka.ms/vs/17/release/vc_redist.x64.exei

    - name: custom
      type: shell
      content: |
        irm https://nodejs.org/dist/latest/node-v20.x.x-x64.msi -OutFile node.msi
        Start-Process msiexec.exe -ArgumentList '/i node.msi /quiet /norestart' -Wait

crates:
  - name: archiveman
    path: ./archiveman
    build: true
    files:
      - input: ./archiveman/target/release/libarchiveman.so
        output: .artifacts/libarchiveman.so
        cleanup: ./archiveman
        system: unix

      - input: ./archiveman/target/release/archiveman.dll
        output: .artifacts/libarchiveman.dll
        cleanup: ./archiveman
        system: windows

    fallback_prefetch:
      - url: 'file+tar+https://github.com/kevinJ045/rew/releases/download/latest/libs-windows.tar.gz'
        output: libs-windows.tar.gz
        extract: .artifacts
        system: windows

      - url: 'file+tar+https://github.com/kevinJ045/rew/releases/download/latest/libs-unix.tar.gz'
        output: libs-unix.tar.gz
        extract: .artifacts
        system: unix
    
  - name: rew_qrew_stub
    path: ./rew-qrew-stub
    build: true
  - name: rew_qrew
    path: ./rew-qrew
    build: true
    files:
      - input: ./rew-qrew/target/release/rew-qrew
        output: .artifacts/rew-qrew
        system: unix
        cleanup: ./rew-qrew

      - input: ./rew-qrew/target/release/rew-qrew.exe
        output: .artifacts/rew-qrew.exe
        system: windows
        cleanup: ./rew-qrew
    cleanup: ./rew-qrew-stub
build:
  - input: ./main.coffee
    output: main.brew
    using: brew
    cleanup: ./main.coffee
  - input: ./main.brew
    output: ./pimmy.qrew
    cleanup: ./main.brew
    using: qrew
install:
  build: true
  bin:
    pimmy: pimmy.qrew